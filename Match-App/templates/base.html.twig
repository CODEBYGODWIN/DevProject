<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>{% block title %}Welcome!{% endblock %}</title>
        <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
        <link rel="icon" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 128 128%22><text y=%221.2em%22 font-size=%2296%22>⚫️</text><text y=%221.3em%22 x=%220.2em%22 font-size=%2276%22 fill=%22%23fff%22>sf</text></svg>">
        {% block stylesheets %}
            <!-- Bootstrap Icons -->
            <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css">
            <!-- Bootstrap CSS -->
            <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
            <!-- Base CSS with version parameter -->
            <link rel="stylesheet" href="{{ asset('css/base.css') }}?v={{ 'now'|date('YmdHi') }}">
            <!-- Popup CSS -->
            <link rel="stylesheet" href="{{ asset('css/popup.css') }}?v={{ 'now'|date('YmdHi') }}">
        {% endblock %}
        {% block javascripts %}
            <!-- Bootstrap JS Bundle -->
            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
            
            <!-- Popup JS -->
            <script src="{{ asset('js/popup.js') }}?v={{ 'now'|date('YmdHi') }}"></script>
            
            <!-- Global resource management -->
            <script>
                window.appState = {
                    homeInitialized: false,
                    homeInitializationInProgress: false,
                    chatInitialized: false,
                    chatInitializationInProgress: false,
                    homeEventSource: null,
                    chatEventSource: null,
                    currentPage: null
                };
                
                function cleanupGlobalResources() {
                    console.log('Cleaning up global resources');
                    
                    if (window.appState.homeEventSource) {
                        window.appState.homeEventSource.close();
                        window.appState.homeEventSource = null;
                    }
                    if (window.appState.chatEventSource) {
                        window.appState.chatEventSource.close();
                        window.appState.chatEventSource = null;
                    }
                    
                    window.appState.homeInitialized = false;
                    window.appState.homeInitializationInProgress = false;
                    window.appState.chatInitialized = false;
                    window.appState.chatInitializationInProgress = false;
                    
                    window.homeInitialized = false;
                    window.homeInitializationInProgress = false;
                    window.chatInitialized = false;
                    window.chatInitializationInProgress = false;
                    window.homeEventSource = null;
                    window.chatEventSource = null;
                }

                document.addEventListener('click', function(e) {
                    const link = e.target.closest('a');
                    if (link && link.href && !link.target && !link.getAttribute('download')) {
                        console.log('Navigation detected, cleaning up resources');
                        cleanupGlobalResources();
                    }
                });
                
                window.addEventListener('beforeunload', function() {
                    cleanupGlobalResources();
                });
                
                function detectCurrentPage() {
                    if (document.querySelector('.chat-container')) {
                        window.appState.currentPage = 'chat';
                    } else if (document.querySelector('.home-page')) {
                        window.appState.currentPage = 'home';
                    } else {
                        window.appState.currentPage = 'other';
                    }
                    console.log('Current page detected:', window.appState.currentPage);
                }
                
                document.addEventListener('DOMContentLoaded', function() {
                    detectCurrentPage();
                });
            </script>
                        
            {% block importmap %}{{ importmap('app') }}{% endblock %}
        {% endblock %}
    </head>
    <body>
        {% block body %}{% endblock %}
    </body>
</html>