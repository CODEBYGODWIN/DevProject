{% extends 'base.html.twig' %}

{% block title %}Inscription{% endblock %}

{% block body %}
    <div class="registration-container">
        <div class="registration-card">
            <h1 class="text-center mb-3">Inscription</h1>
            
            {% for label, messages in app.flashes %}
                {% for message in messages %}
                    <div class="alert alert-{{ label }} mb-4">
                        {{ message }}
                    </div>
                {% endfor %}
            {% endfor %}

            {{ form_start(form, {'attr': {'id': 'registration-form', 'class': 'needs-validation'}}) }}
                <div class="row">
                    <div class="col-md-6 mb-2">
                        <div class="form-group">
                            {{ form_label(form.email, 'Email', {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.email, {'attr': {'class': 'form-control', 'placeholder': 'Votre email'}}) }}
                            <div class="validation-message" id="email-validation">
                                <ul>
                                    <li data-rule="length" class="invalid">L'email doit avoir au moins 8 caractères</li>
                                    <li data-rule="format" class="invalid">Format d'email valide (exemple@domaine.com)</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    
                    <div class="col-md-6 mb-2">
                        <div class="form-group">
                            {{ form_label(form.username, 'Nom d\'utilisateur', {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.username, {'attr': {'class': 'form-control', 'placeholder': 'Votre nom d\'utilisateur'}}) }}
                            <div class="validation-message" id="username-validation">
                                <ul>
                                    <li data-rule="length" class="invalid">Le nom d'utilisateur doit avoir au moins 6 caractères</li>
                                    <li data-rule="format" class="invalid">Caractères autorisés: lettres, chiffres, tirets et underscores</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group mb-2">
                    {{ form_label(form.password, 'Mot de passe', {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.password, {'attr': {'class': 'form-control', 'placeholder': 'Votre mot de passe'}}) }}
                    <div class="validation-message" id="password-validation">
                        <ul>
                            <li data-rule="length" class="invalid">Au moins 8 caractères</li>
                            <li data-rule="uppercase" class="invalid">Au moins une majuscule</li>
                            <li data-rule="lowercase" class="invalid">Au moins une minuscule</li>
                            <li data-rule="number" class="invalid">Au moins un chiffre</li>
                            <li data-rule="special" class="invalid">Au moins un caractère spécial</li>
                        </ul>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6 mb-2">
                        <div class="form-group">
                            {{ form_label(form.birthdate, 'Date de naissance', {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.birthdate, {'attr': {'class': 'form-control'}}) }}
                            <div class="validation-message" id="birthdate-validation">
                                <ul>
                                    <li data-rule="required" class="invalid">La date de naissance est requise</li>
                                    <li data-rule="age" class="invalid">Vous devez avoir au moins 18 ans</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    
                    <div class="col-md-6 mb-2">
                        <div class="form-group">
                            {{ form_label(form.gender, 'Genre', {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.gender, {'attr': {'class': 'form-select'}}) }}
                        </div>
                    </div>
                </div>

                <div class="form-group mb-2">
                    {{ form_label(form.bio, 'Biographie', {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.bio, {'attr': {'class': 'form-control', 'placeholder': 'Parlez-nous de vous', 'rows': 2}}) }}
                </div>

                <div class="form-group mb-2">
                    {{ form_label(form.picture, 'Photo de profil', {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.picture, {'attr': {'class': 'form-control'}}) }}
                    <div class="picture-preview mt-1" style="display: none;">
                        <img id="picture-preview-img" src="#" alt="Aperçu de la photo" style="max-width: 100%; max-height: 150px;" />
                    </div>
                </div>
                
                <div class="form-group mb-3 id-card-section">
                    {{ form_label(form.idCard, 'Carte d\'identité', {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.idCard, {'attr': {'class': 'form-control'}}) }}
                    <small class="form-text text-muted">{{ form_help(form.idCard) }}</small>
                    <div class="validation-message" id="idcard-validation">
                        <ul>
                            <li data-rule="required" class="invalid">Une carte d'identité est requise pour la vérification</li>
                            <li data-rule="format" class="invalid">Format accepté: JPG, PNG ou PDF</li>
                        </ul>
                    </div>
                    <div class="id-card-preview mt-1" style="display: none;">
                        <img id="id-card-preview-img" src="#" alt="Aperçu de la carte d'identité" style="max-width: 100%; max-height: 150px;" />
                        <p class="text-muted small">Votre carte d'identité sera vérifiée par notre équipe après l'inscription.</p>
                    </div>
                </div>
                
                <div class="d-grid gap-2 mb-2">
                    {{ form_widget(form.save, {'attr': {'class': 'btn btn-primary'}}) }}
                </div>
            {{ form_end(form) }}
            
            <div class="text-center mt-2">
                <p class="small">Déjà inscrit ? <a href="{{ path('login') }}" class="login-link">Connectez-vous ici</a></p>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        function initializeRegistrationForm() {
            console.log("Chargement du script d'inscription...");

            // Sélection des champs du formulaire
            const emailInput = document.querySelector('#{{ form.email.vars.id }}');
            const usernameInput = document.querySelector('#{{ form.username.vars.id }}');
            const passwordInput = document.querySelector('#{{ form.password.vars.id }}');
            const birthdateInput = document.querySelector('#{{ form.birthdate.vars.id }}');
            const idCardInput = document.querySelector('#{{ form.idCard.vars.id }}');
            const pictureInput = document.querySelector('#{{ form.picture.vars.id }}');

            // Fonction de validation générique
            function validateField(input, rules) {
                if (!input) return;
                rules.forEach(({ selector, condition }) => {
                    const ruleElement = document.querySelector(selector);
                    if (ruleElement) {
                        if (condition()) {
                            ruleElement.classList.remove('invalid');
                            ruleElement.classList.add('valid');
                        } else {
                            ruleElement.classList.remove('valid');
                            ruleElement.classList.add('invalid');
                        }
                    }
                });
            }

            // Validation email
            if (emailInput) {
                emailInput.addEventListener('input', function () {
                    const email = this.value;
                    validateField(emailInput, [
                        {
                            selector: '#email-validation [data-rule="length"]',
                            condition: () => email.length >= 8
                        },
                        {
                            selector: '#email-validation [data-rule="format"]',
                            condition: () => /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)
                        }
                    ]);
                });
            }

            // Validation nom d'utilisateur
            if (usernameInput) {
                usernameInput.addEventListener('input', function () {
                    const username = this.value;
                    validateField(usernameInput, [
                        {
                            selector: '#username-validation [data-rule="length"]',
                            condition: () => username.length >= 6
                        },
                        {
                            selector: '#username-validation [data-rule="format"]',
                            condition: () => /^[a-zA-Z0-9_-]+$/.test(username)
                        }
                    ]);
                });
            }

            // Validation mot de passe
            if (passwordInput) {
                passwordInput.addEventListener('input', function () {
                    const password = this.value;
                    validateField(passwordInput, [
                        { selector: '#password-validation [data-rule="length"]', condition: () => password.length >= 8 },
                        { selector: '#password-validation [data-rule="uppercase"]', condition: () => /[A-Z]/.test(password) },
                        { selector: '#password-validation [data-rule="lowercase"]', condition: () => /[a-z]/.test(password) },
                        { selector: '#password-validation [data-rule="number"]', condition: () => /[0-9]/.test(password) },
                        { selector: '#password-validation [data-rule="special"]', condition: () => /[^A-Za-z0-9]/.test(password) }
                    ]);
                });
            }

            // Validation date de naissance
            if (birthdateInput) {
                birthdateInput.addEventListener('change', function () {
                    const birthdate = new Date(this.value);
                    const today = new Date();
                    const age = today.getFullYear() - birthdate.getFullYear();
                    validateField(birthdateInput, [
                        { selector: '#birthdate-validation [data-rule="required"]', condition: () => !!this.value },
                        { selector: '#birthdate-validation [data-rule="age"]', condition: () => age >= 18 }
                    ]);
                });
            }

            // Prévisualisation carte d'identité
            if (idCardInput) {
                idCardInput.addEventListener('change', function () {
                    const file = this.files[0];
                    const idCardPreview = document.querySelector('.id-card-preview');
                    const idCardPreviewImg = document.querySelector('#id-card-preview-img');
                    const validTypes = ['image/jpeg', 'image/png', 'application/pdf'];

                    validateField(idCardInput, [
                        { selector: '#idcard-validation [data-rule="required"]', condition: () => !!file },
                        { selector: '#idcard-validation [data-rule="format"]', condition: () => file && validTypes.includes(file.type) }
                    ]);

                    if (file && file.type.startsWith('image/')) {
                        const reader = new FileReader();
                        reader.onload = function (e) {
                            idCardPreviewImg.src = e.target.result;
                            idCardPreview.style.display = 'block';
                        };
                        reader.readAsDataURL(file);
                    } else {
                        idCardPreview.style.display = 'none';
                    }
                });
            }

            // Prévisualisation photo de profil
            if (pictureInput) {
                pictureInput.addEventListener('change', function () {
                    const file = this.files[0];
                    const picturePreview = document.querySelector('.picture-preview');
                    const picturePreviewImg = document.querySelector('#picture-preview-img');

                    if (file && file.type.startsWith('image/')) {
                        const reader = new FileReader();
                        reader.onload = function (e) {
                            picturePreviewImg.src = e.target.result;
                            picturePreview.style.display = 'block';
                        };
                        reader.readAsDataURL(file);
                    } else {
                        picturePreview.style.display = 'none';
                    }
                });
            }
        }

        document.addEventListener('DOMContentLoaded', initializeRegistrationForm);

        document.addEventListener('turbo:load', initializeRegistrationForm);
    </script>


    <style>
        body {
            font-family: 'Poppins', sans-serif;
            background-color: #f8f9fa;
            margin: 0;
            padding: 0;
        }
        
        .registration-container {
            width: 100%;
            max-width: 100%;
            padding: 15px;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
        }
        
        .registration-card {
            background: white;
            border-radius: 10px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            padding: 25px;
            width: 100%;
            max-width: 600px;
        }
        
        h1 {
            color: #333;
            font-weight: 600;
            margin-bottom: 20px;
            font-size: 1.5rem;
        }
        
        .form-label {
            font-weight: 500;
            color: #555;
            font-size: 0.9rem;
        }
        
        .form-control, .form-select {
            border-radius: 5px;
            padding: 8px;
            border: 1px solid #ddd;
            transition: all 0.3s;
            font-size: 0.9rem;
        }
        
        .form-control:focus, .form-select:focus {
            border-color: #007bff;
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
        }
        
        .btn-primary {
            background-color: #007bff;
            border: none;
            padding: 10px;
            font-weight: 500;
            border-radius: 5px;
            transition: all 0.3s;
        }
        
        .btn-primary:hover {
            background-color: #0069d9;
            transform: translateY(-2px);
        }
        
        .login-link {
            color: #007bff;
            text-decoration: none;
            font-weight: 500;
            transition: all 0.3s;
            font-size: 0.9rem;
        }
        
        .login-link:hover {
            color: #0056b3;
            text-decoration: underline;
        }
        
        /* Validation messages */
        .validation-message {
            font-size: 0.75rem;
            margin-top: 3px;
        }
        
        .validation-message ul {
            list-style-type: none;
            padding-left: 0;
            margin-bottom: 0;
        }
        
        .validation-message li {
            padding: 1px 0;
        }
        
        .validation-message li.valid {
            color: #28a745;
        }
        
        .validation-message li.valid::before {
            content: "✓ ";
            font-weight: bold;
        }
        
        .validation-message li.invalid {
            color: #dc3545;
        }
        
        .validation-message li.invalid::before {
            content: "✗ ";
            font-weight: bold;
        }
        
        /* ID Card section */
        .id-card-section {
            border: 1px solid #e9ecef;
            padding: 12px;
            border-radius: 8px;
            background-color: #f9f9f9;
            margin-bottom: 15px;
        }
        
        .id-card-preview, .picture-preview {
            border: 1px dashed #ccc;
            padding: 8px;
            border-radius: 4px;
            background-color: #fff;
            text-align: center;
        }
        
        /* Espacement réduit */
        .mb-2 {
            margin-bottom: 0.5rem !important;
        }
        
        .mb-3 {
            margin-bottom: 0.75rem !important;
        }
        
        /* Responsive design */
        @media (max-width: 768px) {
            .registration-card {
                padding: 15px;
            }
            
            h1 {
                font-size: 1.3rem;
                margin-bottom: 10px;
            }
            
            .form-control, .form-select, .btn-primary {
                padding: 8px;
            }
            
            .id-card-section {
                padding: 8px;
            }
        }
    </style>
{% endblock %}